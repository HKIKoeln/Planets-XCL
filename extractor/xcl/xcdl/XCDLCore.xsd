<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 	xmlns="http://www.planets-project.eu/xcl/schemas/xcl"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:nm="http://www.planets-project.eu/xcl/schemas/xcl"
	xmlns:xcdl="http://www.planets-project.eu/xcl/schemas/xcl"	
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	targetNamespace="http://www.planets-project.eu/xcl/schemas/xcl"
	elementFormDefault="qualified"
	version="1.0" 
	xml:lang="en" >
	
	<xs:import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="preserve.xsd"/>
	<xs:include schemaLocation="XCDLBasicTypes.xsd"/>	
	
	<!--********************************** xcdl section  (root element)********************************************* -->
	<xs:element name="xcdl">
		<xs:annotation>
			<xs:documentation>
				eXtensible Characterisation Description Language (XCDL)
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="xcdlType"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!-- ............complex type:  xcdlType ................. -->
	<xs:complexType name="xcdlType">
		<xs:annotation>
			<xs:documentation>
				A XCDL document describes digital objects. Every xcdl description shall have an identification number.
		    </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="object" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An object is a string of content carrying tokens (called normData) each token
						can be associated with different meanings (called properties). Properties can
						either add an atomic meaning to the referenced token or they can reference 
						an other object with the token.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- *****************************  object section (child of: 'xcdl')  *********************************************** -->
	<xs:element name="object">
		<xs:annotation>
			<xs:documentation>
				Function: Wrapper element for objects to be described through a xcdl. 
				Every object shall have an identification number. 
				The native format of the object may be added.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="data" minOccurs="0"/>
				<xs:element ref="normData" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="propertySet" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
							A propertySet provides one possibility to connect atomic properties to a 
							more complex set of properties. References to a specific content token are always 
							expressed with the aim of a propertySet. 
							PropertySets have no option to model the direction of a property relation. If you
							want to provide such a direction you can use a new object instead where all properties
							are connected to the normData.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
		</xs:complexType>
	</xs:element>
	<!-- *****************************  propertySet section (child of: 'xcdl')  *********************************************** -->
	<xs:element name="propertySet">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
					A propertySet can reference different valueSets of different properties to apply them
					to a certain token of the normData.
				</xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element name="valueSetRelations">
					<xs:annotation>
						<xs:documentation>
							A ValueSetRelation can contain multiple elements for referencing different valueSets
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="ref" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="valueSetId" type="xs:IDREF" use="required"/>
									<xs:attribute name="name" type="xs:string" use="optional"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="dataRef" minOccurs="0">
					<xs:complexType>
						<xs:annotation>
							<xs:documentation>
								A DataRef can be used to apply the references from within the valueSetRelation element
								to a certain position (token) of the normData String. For that it must store the begin and end
								of the token in form of an index and the normData-ID to identify the correct normData.
							</xs:documentation>
						</xs:annotation>
						<xs:sequence>
							<xs:element name="ref" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="begin" type="xs:int" use="required"/>
									<xs:attribute name="end" type="xs:int" use="required"/>
									<xs:attribute name="id" type="xs:IDREF" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID"></xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- ***************************  data section (child of: 'object')  **************************************** -->
	<xs:element name="data">
		<xs:annotation>
			<xs:documentation> 
				Function: Wraps the full source objects data. 
				For relation and reference purposes, an identification number is required.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xcdl:unionType01Type">
					<xs:attribute name="id" type="xs:ID" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- *************************** normalized data section (child of: 'object')  ***************************** -->
	<xs:element name="normData">
		<xs:annotation>
			<xs:documentation>
				Function: Wraps normalized data. 			
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xcdl:unionType01Type">
					<xs:attribute name="id" type="xs:ID" use="required"/>
					<xs:attribute name="type" type="xcdl:informType" use="required"/>				
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- ************************  Property section (child of: 'object')  ******************************* -->
	<xs:element name="property">
		<xs:annotation>
			<xs:documentation>
				Function: Wraps the objects properties. 
				A property shall have an identification number within the xcdl description.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="name"/>
				<xs:element ref="valueSet" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="source" type="sourceType" use="optional"/>
			<xs:attribute name="cat" type="catType" use="optional"/>
		</xs:complexType>
	</xs:element>
	<!--  ............simple type: sourceType.............:  -->
	<xs:simpleType name="sourceType">
		<xs:annotation>
			<xs:documentation> 
				the source the property is derived from. 
				'raw' =derived from the source object; 'implicit'=property is not fixed to the source object but derived from the source objects format specification  
				'added'= property is not raw and implicit, but derived from the file, e.g. filesize or original filename
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="raw"/>
			<xs:enumeration value="implicit"/>
			<xs:enumeration value="added"/>
		</xs:restriction>
	</xs:simpleType>
	<!--  ............simple type: catType.............:  -->
	<xs:simpleType name="catType">
		<xs:annotation>
			<xs:documentation> 
				the properties category: 'descr'=descriptive property, i.e. occurence of object describing property; 'hist'= history property, 
				i.e. property that may appear in a different shape in the source object which may be resolved in the xcdl description (e.g., compressed data); 
				'cont'= content property, i.e. relating directly to a byte sequence; 'extern'= property that refers to external item, i.e. not related to objects data, e.g.,  
				software and hardware used to create the object.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="descr"/>
			<xs:enumeration value="hist"/>
			<xs:enumeration value="cont"/>
			<xs:enumeration value="extern"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- *************************  property name section (child of: 'property')  **************************************  -->
	<xs:element name="name">
		<xs:annotation>
			<xs:documentation> 
				Function: Wraps a unique property name, defined by a xcdl names library.
				Namings for properties which refer to identical issues may differ depending on the format. 
				The different term may be added using the 'alias' attribute.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xcdl:nameType">
					<xs:attribute name="id" type="xs:string" use="required"/>
					<xs:attribute name="alias" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- ************************  property value set section  (child of: 'property') ********************************* -->
	<xs:element name="valueSet">
		<xs:annotation>
			<xs:documentation> 
				Function: Wrapper element for the properties raw and labelled values. 
				Every value set shall have an identification number.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="rawValue" minOccurs="0"/>
				<xs:element ref="labValue" minOccurs="0"/>
				<xs:element name="objectRef" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string"> 
							<xs:pattern value="(file://.*|\.):.*"></xs:pattern>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element ref="dataRef" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
		</xs:complexType>
	</xs:element>
	<!-- ************************** raw value section (child of: 'valueSet')  ************************************** -->
	<xs:element name="rawValue">
		<xs:annotation>
			<xs:documentation>
				Function: Wraps the distinct raw value, as extracted from the source object ;
				by default bytes shall be encoded in UTF-16 for non-binary data, in hex numbers for binary data. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xcdl:unionType01Type"/>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!--  ************************  labelled value section (child of: 'valueSet') ******************************* -->
	<xs:element name="labValue" >
		<xs:annotation>
			<xs:documentation>
				Function: Wrapping element for labelled value.
				A labelled value shall be expressed by its distinct value and its type.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="val" maxOccurs="unbounded" >
					<xs:annotation>
						<xs:documentation> 
							The distinct labelled value. 
							This can either be a UTF-16 encoded string, an integer or decimal number or a fixed label defined in simple type 'xcdlFixedLabls'. 
							For an accurate representation some properties values, especially those expressed in integers, 
							may require additional measurement information.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xcdl:unionType10Type">
								<xs:attribute name="unit" type="xcdl:measureType" use="optional"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="type" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
							Function: Wraps type of the labelled value. 
							Some properties distinct values may be expressed as a sequence of values which are repeatable groups.
							E.g.: a palette with entries for colours mixed from red, green and blue channels may be x times repeatable 
							depending on the bit depth. In this case the 'group' attribute is set on value '3', telling the reading tool that 
							a meaningful unit consists of triplets.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xcdl:labValType">
								<xs:attribute name="group" type="xs:unsignedInt" use="optional"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- ****************** data reference section (child of: 'valueSet') **************************  -->
	<xs:element name="dataRef">
		<xs:annotation>
			<xs:documentation>
				Function: Reference to data. 
				This can either be the source data (element 'data') 
				or normalized data (element 'normData'). 
				Attribute 'ind': Indicator for the type of reference. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="ind" type="dataRefType" use="required"/>
			<xs:attribute name="propertySetId" type="xs:IDREF" use="optional"/>
		</xs:complexType>
	</xs:element>
	<!-- ........simple type: 'dataRefType': ....... -->
	<xs:simpleType name="dataRefType">
		<xs:annotation>
			<xs:documentation>
				Type of data reference: none= no reference to data; global= reference to total source data; 				
				normSpecific= reference to specific normalized data. If value is 'specific', 'ref' element shall be included.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="none"/>
			<xs:enumeration value="global"/>
			<xs:enumeration value="normSpecific"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- ......... element 'ref':  .............. -->
	<xs:element name="ref">
		<xs:annotation>
			<xs:documentation>
				Function: distinct data coordinates for references.
				Startposition and Endposition of the bytes within the 
				referenced data shall be declared using the attributes. 
				Also required is an identification number for each 'ref' element.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="start" type="xs:unsignedLong" use="required"/>
			<xs:attribute name="end" type="xs:unsignedLong" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
