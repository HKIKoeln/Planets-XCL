<?xml version="1.0" encoding="UTF-8"?>
<XCELDocument xmlns="http://www.planets-project.eu/xcl/schemas/xcl"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.planets-project.eu/xcl/schemas/xcl
    schemas/XCELBasicExtension.xsd">
    
    <!-- 
        Subject:    XCEL for PDF 1.4
        Created by HKI, 2007
        
        History:  07/05/31  first version for testobject:  test01.pdf  complete.
        
    -->  
    
    <!--
        #################################
        
        PREPROCESSING:
        
        ################################   
    -->
    <preProcessing> 
    </preProcessing>
    
    <!-- 
        #################################
        
        FORMAT DESCRIPTION:
        
        ################################
    -->
    <formatDescription>
        
        <item identifier="PDFRootItem" originalName="PDFFile" xsi:type="structuringItem" order="sequence">
            
            <!-- §§§§§§§§§§§     File Header     §§§§§§§§§§§§§§
                
                The first line of a PDF file is a header identifying the version of the PDF specification
                to which the file conforms. For a file conforming to PDF version 1.4, the
                header should be
                %PDF−1.4
                However, since any file conforming to an earlier version of PDF also conforms to
                version 1.4, an application that processes PDF 1.4 can also accept files with any of
                the following headers:
                %PDF−1.0
                %PDF−1.1
                %PDF−1.2
                %PDF−1.3            
            -->
            
            <item  identifier="PDFHeader" originalName="header" xsi:type="structuringItem" order="sequence">
                <symbol identifier="PDFVersion" originalName="version" interpretation="uint8">
                    <range>
                        <startposition xsi:type="sequential"/>
                        <length xsi:type="fixed">8</length>
                    </range>
                    <validValues> 
                        <value>37 80 68 70 45 49 46 48</value>  <!-- = %PDF-1.0  -->
                        <value>37 80 68 70 45 49 46 49</value>
                        <value>37 80 68 70 45 49 46 50</value>
                        <value>37 80 68 70 45 49 46 51</value>
                        <value>37 80 68 70 45 49 46 52</value>
                        <value>37 80 68 70 45 49 46 53</value>
                        <value>37 80 68 70 45 49 46 54</value>  <!-- = %PDF-1.6  -->
                    </validValues>
                    <name>signature</name>    
                </symbol>
                <processing type="pullXCEL" xcelRef="TEMPL_whitespaceAll"/>             
                
                <!-- 
                    Note: If a PDF file contains binary data, as most do (see Section 3.1, “Lexical Conventions”),
                    it is recommended that the header line be immediately followed by a
                    comment line containing at least four binary characters—that is, characters whose
                    codes are 128 or greater. This will ensure proper behavior of file transfer applications
                    that inspect data near the beginning of a file to determine whether to treat the file’s
                    contents as text or as binary.          
                -->
                <item  identifier="header_comment" xsi:type="structuringItem" optional="true" multiple="true">
                    <processing type="pullXCEL" xcelRef="TEMPL_comment"/>
                </item>
            </item>   
            <!-- end header -->
            
            <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
            
            
            <!-- §§§§§§§§§           File Body         §§§§§§§§§§§§§§§§§
                
                The body of a PDF file consists of a sequence of indirect objects representing the
                contents of a document. The objects, which are of the basic types described in
                Section 3.2, “Objects,” represent components of the document such as fonts,
                pages, and sampled images.  
            -->
            <item  identifier="PDFBody" originalName="body" xsi:type="structuringItem" order="sequence">  
            <item identifier="indirectObjectList"  xsi:type="structuringItem" order="all" multiple="true">
                
                <item identifier="indirectObject"  xsi:type="structuringItem" order="sequence">
                    
                <item  identifier="indirectObject_Start"  xsi:type="structuringItem" order="sequence">
                    <item  identifier="indirectObject_Start_ObjectNumber" originalName="objectNumber" xsi:type="definitionItem">
                        <symbol identifier="indirectObject_ObjectNumber_Part"  interpretation="uint8" multiple="true">
                            <range>
                                <startposition xsi:type="sequential"/>
                                <length xsi:type="fixed">1</length>
                            </range>
                            <validValues> 
                                <startRange>48</startRange>  
                                <endRange>57</endRange>
                            </validValues>
                        </symbol>
                        <name>PDFObjectNumber</name>
                    </item>
                    <item identifier="delimiter01" xsi:type="structuringItem">
                        <processing type="pullXCEL" xcelRef="TEMPL_whitespaceSansEOL"/>                     
                    </item> 
                    <item  identifier="indirectObject_Start_generationNumber" originalName="generationNumber" xsi:type="definitionItem">
                        <symbol identifier="indirectObject_generationNumber_Part"  interpretation="uint8" multiple="true">
                            <range>
                                <startposition xsi:type="sequential"/>
                                <length xsi:type="fixed">1</length>
                            </range>
                            <validValues> 
                                <startRange>48</startRange>  <!-- =0  -->
                                <endRange>57</endRange>
                            </validValues>
                        </symbol>
                        <name>PDFObjectGenerationNumber</name>
                    </item>
                    <item identifier="delimiter02" xsi:type="structuringItem">
                        <processing type="pullXCEL" xcelRef="TEMPL_whitespaceSansEOL"/>                     
                    </item> 
                    <item  identifier="indirectObject_Start_keyword" originalName="keyword" xsi:type="structuringItem">
                        <property identifier="indirectObject_Start_keyword_obj"  originalName="obj" interpretation="ASCII">
                            <range>
                                <startposition xsi:type="sequential"/>
                                <length xsi:type="fixed">3</length>
                            </range>
                            <value>obj</value>
                        </property>
                    </item>  
                </item>                
                <!-- End: indirectObject_start   -->
                
                <!--   <processing type="pullXCEL" xcelRef="TEMPL_noise"/> -->
                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true">
                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues>
                            <value>0</value>
                            <value>9</value>
                            <value>10</value>
                            <value>12</value>
                            <value>13</value>
                            <value>32</value> 
                        </validValues>
                    </symbol>
                </item>  
                
                 <item identifier="pdfObjectList"  xsi:type="structuringItem" order="choice" multiple="true">                              
                    <!-- 
                        +++++++++++++++++++
                        Dictionary Object:
                        +++++++++++++++++++
                    -->                    
                    <item identifier="dictionaryObject" originalName="dictionaryObject"  xsi:type="structuringItem" order="sequence">
                        <processing type="pullXCEL" xcelRef="TEMPL_dictObjStartDelimiter"/>                    
                        <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                        <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                            <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                <range>
                                    <startposition xsi:type="sequential"/>
                                    <length xsi:type="fixed">1</length>
                                </range>
                                <validValues>
                                    <value>0</value>
                                    <value>9</value>
                                    <value>10</value>
                                    <value>12</value>
                                    <value>13</value>
                                    <value>32</value> 
                                </validValues>
                            </symbol>
                        </item>  
                        <item identifier="dictionaryObjectList" xsi:type="structuringItem" order="choice">
                             
                                                      
                        </item>    <!-- end:  Dictionary Object List   -->
                        
                        <!--<processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                        
                        <processing type="pullXCEL" xcelRef="TEMPL_dictObjEndDelimiter"/>   
                        
                    </item> <!--  End:   Dictionary object: -->  
                    
                    
                    <!-- 
                        +++++++++++++++++++
                        Stream Object:
                        +++++++++++++++++++
                    -->
                    <item identifier="streamObject" originalName="streamObject"  xsi:type="structuringItem" order="sequence">
                        <processing type="pullXCEL" xcelRef="TEMPL_streamObjStartDelimiter"/>                        
                        <!--   (HKI Comment)        Although defined otherwise,
                            there may be an EOL Marker set before the actual stream starts 
                            and therefore the length of the string between the two keywords
                            'stream' and 'endstream' may differ from the declaration in the
                            stream dictionary!!  Therefore we test for an EOL Marker:
                            
                            <item identifier="stream_EOLMarker"  xsi:type="structuringItem" order="sequence" optional="true">
                            <processing type="pullXCEL" xcelRef="TEMPL_EOLMarker"/> 
                            </item>   
                            <item identifier="contentStream"  xsi:type="structuringItem" order="sequence">
                            <processing type="pushBinary">
                            <processingMethod name="setLength">
                            <param valueRef="streamDictEntry_stream_Length"/>  stream length? 
                            </processingMethod>
                            <processingMethod name="addFilter">
                            <param value="compression"/>                                    
                            <param nameRef="zlibDeflateInflate"/>                                      
                            </processingMethod>
                            </processing>                                
                            </item>   -->    
                        
                        <!--    <processing type="pullXCEL" xcelRef="TEMPL_noise"/>    -->
                        <item identifier="ws_03" xsi:type="structuringItem" order="sequence"  optional="true">
                            <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                <range>
                                    <startposition xsi:type="sequential"/>
                                    <length xsi:type="fixed">1</length>
                                </range>
                                <validValues>
                                    <value>0</value>
                                    <value>9</value>
                                    <value>10</value>
                                    <value>12</value>
                                    <value>13</value>
                                    <value>32</value> 
                                </validValues>
                            </symbol>
                        </item>                      
                        
 
                        
                        <!-- Stream content.  -->
                        <item identifier="streamContent" xsi:type="structuringItem" order="all">
                            
                                                 
                            <item identifier="streamContent_read" xsi:type="structuringItem" order="sequence" >
                                <symbol identifier="streamContent_read_any_symbol_except_e" interpretation="ASCII" multiple="true">
                                <range>
                                    <startposition xsi:type="sequential"/>
                                    <length xsi:type="fixed">1</length>
                                </range>
                                <nonValidValues> 
                                    <value>e</value> 
                                </nonValidValues>          
                            </symbol>
                            </item>
                            
                            <!-- if "e" detected, chech if keyword endstream is reached. If not go on reading -->
                            <item identifier="streamContent_search_end" xsi:type="structuringItem" order="sequence" multiple="true">
                            
                            
                                <item xsi:type="structuringItem" identifier="streamContent_search_end_alternatives" order="choice">
                                
                                    <!-- choice 1: endstream  -->
                                    <item xsi:type="structuringItem" identifier="streamContent_found_endstream">
                                    
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_e" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>e</value>
                                         </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_n" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>n</value>
                                         </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_d" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>d</value>
                                        </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_s" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>s</value>
                                         </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_t" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>t</value>
                                         </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_r" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>r</value>
                                        </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_e2" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>e</value>
                                         </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_a" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>a</value>
                                        </property>
                                        <property xsi:type="propertyType" identifier="StreamContentEndstreamSearch_m" interpretation="ASCII">
                                        <range>
                                            <startposition xsi:type="sequential"></startposition>
                                            <length xsi:type="fixed">1</length>
                                        </range>
                                        <value>m</value>
                                    </property>
                                   
                                </item>
                                    <!-- end choice 1: endstream found -->
                             
                             
                             
                                    <!-- choice 2: 'e' -->
                                   <item xsi:type="structuringItem" identifier="streamContent_not_found_endstream">
                                        <property xsi:type="propertyType" identifier="StreamContent_get_e" interpretation="ASCII">
                                            <range>
                                                <startposition xsi:type="sequential"></startposition>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <value>e</value>
                                        </property>
                                        
                                        <symbol identifier="streamContent_read_on_any_symbol_except_e" interpretation="ASCII" multiple="true">
                                            <range>
                                                <startposition xsi:type="sequential"/>
                                                <length xsi:type="fixed">1</length>
                                            </range>
                                            <nonValidValues> 
                                                <value>e</value> 
                                            </nonValidValues>          
                                        </symbol>
                                    </item>
                                    <!-- end choice 2: keyword endstream not found yet -->
                                
                                </item>
                                <!-- end alternatives -->
                        
                        </item>
                            
                        </item>
                       <!-- end: stream content -->
                        
                        
                        <!-- Stream content.  -->
                        <!--<item identifier="i0" xsi:type="structuringItem" order="sequence">
                            <symbol identifier="any_symbol_except_e" interpretation="ASCII" multiple="true">
                                <range>
                                    <startposition xsi:type="sequential"/>
                                    <length xsi:type="fixed">1</length>
                                </range>
                                <nonValidValues> 
                                    <value>e</value> 
                                </nonValidValues>          
                            </symbol>
                            <item identifier="i1" xsi:type="structuringItem" order="sequence">
                                <item identifier="i2" xsi:type="structuringItem" order="choice">
                                    <property identifier="choice_endstream"  interpretation="ASCII">
                                        <range>
                                            <startposition xsi:type="sequential"/>
                                            <length xsi:type="fixed">9</length>
                                        </range>
                                        <value>endstream</value>
                                    </property>   
                                    <item identifier="i3" xsi:type="structuringItem" order="sequence">
                                        <symbol identifier="!en_!.e" matchingBehaviour="regexp" interpretation="ASCII" multiple="true">
                                            <range>
                                                <startposition xsi:type="sequential"/>
                                                <length xsi:type="fixed">2</length>
                                            </range>
                                            <nonValidValues> 
                                                <value>en</value>
                                                <value>.e</value> 
                                            </nonValidValues>          
                                        </symbol>
                                        <item identifier="choice_next1" xsi:type="structuringItem" order="choice">
                                            <item identifier="choice_endstream_OR_.enstream" xsi:type="structuringItem" order="choice">
                                                <symbol identifier="choice_.endstream"  interpretation="ASCII" matchingBehaviour="regexp">
                                                    <range>
                                                        <startposition xsi:type="sequential"/>
                                                        <length xsi:type="fixed">10</length>
                                                    </range>
                                                    <validValues>
                                                    <value>.endstream</value>
                                                    </validValues>
                                                </symbol> 
                                                <symbol identifier="Choice_endstream"  interpretation="ASCII" matchingBehaviour="regexp">
                                                    <range>
                                                        <startposition xsi:type="sequential"/>
                                                        <length xsi:type="fixed">9</length>
                                                    </range>
                                                    <validValues>
                                                    <value>endstream</value>
                                                    </validValues>
                                                </symbol>   
                                            </item>
                                            <item identifier="choice_nextItem" xsi:type="structuringItem" order="sequence">
                                                <symbol identifier="!end_!.en_!..e" matchingBehaviour="regexp" interpretation="ASCII" multiple="true">
                                                    <range>
                                                        <startposition xsi:type="sequential"/>
                                                        <length xsi:type="fixed">3</length>
                                                    </range>
                                                    <nonValidValues> 
                                                        <value>..e</value>
                                                        <value>.en</value> 
                                                        <value>end</value>
                                                    </nonValidValues>          
                                                </symbol>
                                                <item identifier="choice_next2" xsi:type="structuringItem" order="choice">
                                                    <item identifier="choice_endstream_OR_.endstream_OR_..endstream" xsi:type="structuringItem" order="choice">
                                                        <symbol identifier="choice_..endstream"  interpretation="ASCII" matchingBehaviour="regexp">
                                                            <range>
                                                                <startposition xsi:type="sequential"/>
                                                                <length xsi:type="fixed">11</length>
                                                            </range>
                                                            <validValues>
                                                            <value>..endstream</value>
                                                            </validValues>
                                                        </symbol> 
                                                        <symbol identifier="Choice_.endstream"  interpretation="ASCII" matchingBehaviour="regexp">
                                                            <range>
                                                                <startposition xsi:type="sequential"/>
                                                                <length xsi:type="fixed">10</length>
                                                            </range>
                                                            <validValues>
                                                                <value>.endstream</value>
                                                            </validValues>
                                                        </symbol>
                                                        <symbol identifier="Choice_endstream"  interpretation="ASCII" matchingBehaviour="regexp">
                                                            <range>
                                                                <startposition xsi:type="sequential"/>
                                                                <length xsi:type="fixed">9</length>
                                                            </range>
                                                            <validValues>
                                                                <value>endstream</value>
                                                            </validValues>
                                                        </symbol>
                                                    </item>      
                                                    <item identifier="choice_next3" xsi:type="structuringItem" order="sequence">
                                                        <symbol identifier="ID!ends_!.end_!..en_!...e" matchingBehaviour="regexp" interpretation="ASCII" multiple="true">
                                                            <range>
                                                                <startposition xsi:type="sequential"/>
                                                                <length xsi:type="fixed">4</length>
                                                            </range>
                                                            <nonValidValues> 
                                                                <value>...e</value>
                                                                <value>..en</value> 
                                                                <value>.end</value>
                                                                <value>ends</value>
                                                            </nonValidValues>          
                                                        </symbol>
                                                        <item identifier="endOfStream" xsi:type="structuringItem" order="choice">
                                                            <symbol identifier="alt1" matchingBehaviour="regexp" interpretation="ASCII">
                                                                <range>
                                                                    <startposition xsi:type="sequential"/>
                                                                    <length xsi:type="fixed">8</length>
                                                                </range>
                                                                <validValues>
                                                                <value>...endst</value>
                                                                </validValues>
                                                            </symbol>
                                                            <symbol identifier="alt2" matchingBehaviour="regexp"  interpretation="ASCII">
                                                                <range>
                                                                    <startposition xsi:type="sequential"/>
                                                                    <length xsi:type="fixed">7</length>
                                                                </range> 
                                                                <validValues>
                                                                <value>..endst</value>
                                                                </validValues>
                                                            </symbol>
                                                            <symbol identifier="alt3" matchingBehaviour="regexp"  interpretation="ASCII">
                                                                <range>
                                                                    <startposition xsi:type="sequential"/>
                                                                    <length xsi:type="fixed">6</length>
                                                                </range>  
                                                                <validValues>
                                                                <value>.endst</value>
                                                                </validValues>
                                                            </symbol> 
                                                            <symbol identifier="alt4"  matchingBehaviour="regexp" interpretation="ASCII">
                                                                <range>
                                                                    <startposition xsi:type="sequential"/>
                                                                    <length xsi:type="fixed">5</length>
                                                                </range>
                                                                <validValues>
                                                                <value>endst</value>
                                                                </validValues>
                                                            </symbol>
                                                        </item>                         
                                                    </item>    
                                                </item>                            
                                            </item>
                                        </item>   
                                    </item>   
                                </item>  
                            </item>    
                        </item>-->
                       <processing type="pullXCEL" xcelRef="TEMPL_noise"></processing>

                    </item>    
                    <!--   +++++++++++   End: stream object   +++++++++++++++++++  -->
                     <!-- 
                         +++++++++++++++++++
                         Number Object:
                         +++++++++++++++++++
                     -->
                     <item identifier="numberObject" xsi:type="structuringItem" order="all" multiple="true">
                     <item identifier="numberObjectParts"  xsi:type="structuringItem" order="choice">  
                         <property identifier="numberObjectPart_hyphenMinus" interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>45</value> 
                         </property>   
                         <symbol identifier="numberObjectPart_int1" interpretation="uint8" multiple="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange> 
                                 <endRange>57</endRange>
                             </validValues>                                                      
                         </symbol>                                    
                         <property identifier="numberObjectPart_Delimiter"  interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>46</value>
                         </property> 
                         <property identifier="numberObjectPart_Expansion_hyphenMinus" interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>45</value>   <!--  =   -     -->
                         </property>   
                         <symbol identifier="numberObjectPart_Expansion_int2" interpretation="uint8" multiple="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange> 
                                 <endRange>57</endRange>
                             </validValues>                                                      
                         </symbol>                                                
                     </item>
                 </item>
                    <!-- End:  number object  -->                    
                     
                    <!-- HKI comment: there also may be whitespace between object types:   -->
                    <item identifier="ws_03" xsi:type="structuringItem" order="sequence"  optional="true">
                        <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                            <range>
                                <startposition xsi:type="sequential"/>
                                <length xsi:type="fixed">1</length>
                            </range>
                            <validValues>
                                <value>0</value>
                                <value>9</value>
                                <value>10</value>
                                <value>12</value>
                                <value>13</value>
                                <value>32</value> 
                            </validValues>
                        </symbol>
                    </item>                      
                                        
                </item>
                <!--   End: pdf object list    -->
                
                
                 <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>   -->
                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true">
                     <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues>
                            <value>0</value>
                            <value>9</value>
                            <value>10</value>
                            <value>12</value>
                            <value>13</value>
                            <value>32</value> 
                        </validValues>
                    </symbol>                    
                </item>     
                
                <!-- indirect object end:   -->
                <item identifier="indirectObjectEnd" xsi:type="structuringItem" order="sequence">
                    <item  identifier="objectEnd_keyword" originalName="keyword" xsi:type="structuringItem">
                        <property identifier="keyword_endobj"  originalName="endobj" interpretation="uint8">
                            <range>
                                <startposition xsi:type="sequential"/>
                                <length xsi:type="fixed">6</length>
                            </range>
                            <value>101 110 100 111 98 106</value>   <!--  = endobj    -->
                        </property>
                    </item>  
                </item>   
                <!-- end: indirect object end -->                   
            </item>
            <!-- end of indirect object-->
                
            <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>   -->
                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true">
                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues>
                            <value>0</value>
                            <value>9</value>
                            <value>10</value>
                            <value>12</value>
                            <value>13</value>
                            <value>32</value> 
                        </validValues>
                    </symbol>                    
                </item>        
                
            </item>
                <!-- End :  indirect object list   -->
            <!--<processing type="pullXCEL" xcelRef="TEMPL_noise"/>   -->         
                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true">
                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues>
                            <value>0</value>
                            <value>9</value>
                            <value>10</value>
                            <value>12</value>
                            <value>13</value>
                            <value>32</value> 
                        </validValues>
                    </symbol>                    
                </item>     
                
                
        </item>  
        <!-- end of body -->
            
            <!-- §§§§§§§§§§§§         cross reference table:     §§§§§§§§§§§§§
                Reference: p.64f.
            -->
            
            <item identifier="crossReferenceTable" xsi:type="structuringItem" order="sequence">
                <item identifier="crossRefTableStart_keyword" xsi:type="structuringItem">
                    <property identifier="keyword_crossRefTable"  originalName="xref" interpretation="ASCII">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">4</length>
                        </range>
                        <value>xref</value>
                    </property>
                </item>
                
                <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
                
                 <item identifier="crossRefSubsection" originalName="crossRefSubsection" xsi:type="structuringItem" order="sequence">
                     <item identifier="crossRefTable_index" xsi:type="structuringItem" order="sequence" multiple="true">
                         <symbol identifier="index_xref_objNumber"  interpretation="uint16">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange>    <!-- =0  -->
                                 <endRange>57</endRange>
                             </validValues>
                         </symbol>            
                         <property identifier="indexline_xref_delimiter"  interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>32</value>  <!--  =space  -->
                         </property>
                         <symbol identifier="indexline_xref_numberOfEntries"  interpretation="uint8" multiple="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange>  <!-- =0  -->
                                     <endRange>57</endRange>
                             </validValues>
                         </symbol>
                         
                         <!--<item identifier="indexline_xref__noise" xsi:type="structuringItem" order="all" optional="true">
                             <item identifier="indexline_xref__ws" xsi:type="structuringItem" multiple="true" optional="true">
                                 <processing type="pullXCEL" xcelRef="TEMPL_whitespaceAll"/>                     
                             </item>    
                             <item identifier="indexline_xref_comment" xsi:type="structuringItem" multiple="true" optional="true">
                                 <processing type="pullXCEL" xcelRef="TEMPL_comment"/>                     
                             </item>  
                         </item>-->
                         <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
                         
                     </item>     
                     <!-- End:  crossRef Table  index    -->                     
                     <item identifier="xref_entry" xsi:type="structuringItem"  order="sequence" multiple="true">
                         <symbol identifier="xref_entry_byteOffset" originalName="ByteOffset" interpretation="uint8" multiple="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange>  <!-- =0  -->
                                 <endRange>57</endRange>
                             </validValues>
                         </symbol>
                         <property identifier="xref_entry_delimiter01"  interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>32</value>  <!--  =space  -->
                         </property>
                         <symbol identifier="xref_entry_generationNumber" originalName="generationNumber" interpretation="uint8" multiple="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <startRange>48</startRange>  <!-- =0  -->
                                 <endRange>57</endRange>
                             </validValues>
                         </symbol>
                         <property identifier="xref_entry_delimiter02"  interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <value>32</value>  <!--  =space  -->
                         </property>
                         <symbol identifier="xref_entry_inUseIndicator" originalName="inUseEntry" interpretation="uint8">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues> 
                                 <value>102</value>
                                 <value>110</value>
                             </validValues>
                         </symbol>
                         <item identifier="xref_entryDelimiters" xsi:type="structuringItem"  order="sequence" multiple="true">
                             <processing type="pullXCEL" xcelRef="TEMPL_EOLMarker"/>     <!-- !! xcel Implementation note: we accept MORE than two EOL chars here !! -->
                         </item>     
                     </item>
                     <!-- End of  xref  entry  -->
                 </item>
            </item>   <!-- End: cross reference table    --> 
            
             <!-- §§§§§§§§§§§§§§§        trailer:    §§§§§§§§§§§§§§§§§  
                     Reference: p. 67f.
             -->
             
            <item identifier="trailer" xsi:type="structuringItem" order="sequence">
                 <!--   ++++++++     Trailer dictionary:       ++++++++++++
                 -->    
                 <item identifier="trailerDictionary" originalName="trailerDictionary" xsi:type="structuringItem" order="sequence">
                     <property identifier="trailerDictionary_keyword_trailer"  interpretation="ASCII">
                         <range>
                             <startposition xsi:type="sequential"/>
                             <length xsi:type="fixed">7</length>
                         </range>
                         <value>trailer</value> 
                     </property>
                     
                     <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                     <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                         <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues>
                                 <value>0</value>
                                 <value>9</value>
                                 <value>10</value>
                                 <value>12</value>
                                 <value>13</value>
                                 <value>32</value> 
                             </validValues>
                         </symbol>
                     </item>  
                     
                     <item identifier="trailerDictionaryEntries" xsi:type="structuringItem" order="sequence" originalName="trailerDictionaryEntries">
                         <processing type="pullXCEL" xcelRef="TEMPL_dictObjStartDelimiter"/>
                         
                         <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                         <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                             <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                 <range>
                                     <startposition xsi:type="sequential"/>
                                     <length xsi:type="fixed">1</length>
                                 </range>
                                 <validValues>
                                     <value>0</value>
                                     <value>9</value>
                                     <value>10</value>
                                     <value>12</value>
                                     <value>13</value>
                                     <value>32</value> 
                                 </validValues>
                             </symbol>
                         </item>  
                         
                         <item identifier="trailerDictionaryEntries_list" xsi:type="structuringItem" order="all" originalName="trailerDictionaryEntries_list">
                            <!-- KEYWORD: Root:   -->
                            <item  identifier="trailerDictionaryEntries_Root" xsi:type="structuringItem" order="sequence" originalName="Root">
                                <property identifier="KEY_nameObj_Root" interpretation="ASCII">
                                    <range>
                                        <startposition xsi:type="sequential"/>
                                        <length xsi:type="fixed">5</length>
                                    </range>
                                    <value>/Root</value>   
                                </property>
                                
                                <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                        <range>
                                            <startposition xsi:type="sequential"/>
                                            <length xsi:type="fixed">1</length>
                                        </range>
                                        <validValues>
                                            <value>0</value>
                                            <value>9</value>
                                            <value>10</value>
                                            <value>12</value>
                                            <value>13</value>
                                            <value>32</value> 
                                        </validValues>
                                    </symbol>
                                </item>  
                                
                                <processing type="pullXCEL" xcelRef="TEMPL_indirectObjectReference"/>
                                
                                <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                        <range>
                                            <startposition xsi:type="sequential"/>
                                            <length xsi:type="fixed">1</length>
                                        </range>
                                        <validValues>
                                            <value>0</value>
                                            <value>9</value>
                                            <value>10</value>
                                            <value>12</value>
                                            <value>13</value>
                                            <value>32</value> 
                                        </validValues>
                                    </symbol>
                                </item>  
                            </item>   
                             
                            <!-- KEYWORD:  Size:   -->
                             <item  identifier="trailerDictionaryEntries_Size" xsi:type="structuringItem" order="sequence">
                                 <property identifier="KEY_nameObj_Size" interpretation="ASCII">
                                     <range>
                                         <startposition xsi:type="sequential"/>
                                         <length xsi:type="fixed">5</length>
                                     </range>
                                     <value>/Size</value>   
                                 </property>
                                                                 
                                 <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                 <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                     <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <validValues>
                                             <value>0</value>
                                             <value>9</value>
                                             <value>10</value>
                                             <value>12</value>
                                             <value>13</value>
                                             <value>32</value> 
                                         </validValues>
                                     </symbol>
                                 </item>  
                                 
                                 <!-- noise (= whitespaceAll and comment lines):    -->     
                                 <!-- 
                                 <item identifier="noise"  xsi:type="structuringItem" order="all" optional="true" multiple="false">
                                     <item identifier="wsx_noise" xsi:type="structuringItem" optional="true" multiple="true">
                                         <item identifier="whitespacAll" xsi:type="structuringItem" order="sequence">
                                             <symbol identifier="whitespaceAllx" interpretation="uint8" multiple="true" optional="true">
                                                 <range>
                                                     <startposition xsi:type="sequential"/>
                                                     <length xsi:type="fixed">1</length>
                                                 </range>
                                                 <validValues>
                                                     <value>0</value>
                                                     <value>9</value>
                                                     <value>10</value>
                                                     <value>12</value>
                                                     <value>13</value>
                                                     <value>32</value> 
                                                 </validValues>
                                             </symbol>
                                         </item>                        
                                     </item>    
                                     <item identifier="com_noise" xsi:type="structuringItem" optional="true" multiple="true">
                                         <item identifier="comment" xsi:type="structuringItem" order="sequence" optional="true">           
                                             <property  identifier="comt_delimiter" interpretation="uint8">
                                                 <range>
                                                     <startposition xsi:type="sequential"/>
                                                     <length xsi:type="fixed">1</length>
                                                 </range>
                                                 <value>37</value
                                             </property>
                                             <symbol identifier="comt_char" interpretation="uint8" multiple="true">
                                                 <range>
                                                     <startposition xsi:type="sequential"/>
                                                     <length xsi:type="fixed">1</length>
                                                 </range>
                                                 <nonValidValues>
                                                     <value>13</value>
                                                     <value>10</value>
                                                 </nonValidValues>
                                             </symbol>
                                             <item identifier="EOLMarker" xsi:type="structuringItem" order="sequence">
                                                 <symbol identifier="EOL_mark" interpretation="uint8">
                                                     <range>
                                                         <startposition xsi:type="sequential"/>
                                                         <length xsi:type="fixed">1</length>
                                                     </range>
                                                     <validValues>
                                                         <value>13</value>
                                                         <value>10</value>
                                                     </validValues>
                                                 </symbol>
                                             </item>   
                                         </item>                  
                                     </item>  
                                 </item> -->
                                                            
                                 <!-- default integer number object :    -->     
                                 <item identifier="xrefSize_intObj" xsi:type="definitionItem" order="sequence">
                                 <!-- <property identifier="intObj_hyphenMinus" interpretation="uint8" optional="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <value>45</value>  
                                     </property>  -->
                                     <symbol identifier="intNb" interpretation="uint8" multiple="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <validValues>
                                             <startRange>48</startRange>
                                             <endRange>57</endRange>
                                         </validValues>
                                     </symbol>
                                     <name>xrefSize</name>
                                 </item>                           
                                 
                               <!--  <processing type="pullXCEL" xcelRef="TEMPL_intObj">
                                     <processingMethod name="setName">
                                         <param value="xrefSize"/>
                                     </processingMethod>                                  
                                     </processing>  -->
                                 
                                 <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                 <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                     <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <validValues>
                                             <value>0</value>
                                             <value>9</value>
                                             <value>10</value>
                                             <value>12</value>
                                             <value>13</value>
                                             <value>32</value> 
                                         </validValues>
                                     </symbol>
                                 </item>  
                             </item>                         
                             
                             <!--                             
                            <item  identifier="trailerDictionaryEntries_Size" xsi:type="structuringItem" order="sequence" originalName="Size">
                                <property identifier="KEY_nameObj_Info" interpretation="ASCII">
                                    <range>
                                        <startposition xsi:type="sequential"/>
                                        <length xsi:type="fixed">5</length>
                                    </range>
                                    <value>/Size</value>   
                                </property>
                                <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
                                
                                <symbol xsi:type="symbolType" identifier="intObj" multiple="true">
                                    <range>
                                        <startposition xsi:type="sequential"/>
                                        <length xsi:type="fixed">1</length>
                                    </range>
                                    <validValues>
                                        <startRange>48</startRange>
                                        <endRange>57</endRange>
                                    </validValues>
                                </symbol>     
                                <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
                            </item>  -->
                             <!-- KEYWORD:  Info:   -->
                            <item  identifier="trailerDictionaryEntries_Info" xsi:type="structuringItem" order="sequence" optional="true" originalName="Info">
                                <property identifier="IDKEY_nameObj_Info" interpretation="ASCII">
                                    <range>
                                        <startposition xsi:type="sequential"/>
                                        <length xsi:type="fixed">5</length>
                                    </range>
                                    <value>/Info</value>   
                                </property>
                                <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                        <range>
                                            <startposition xsi:type="sequential"/>
                                            <length xsi:type="fixed">1</length>
                                        </range>
                                        <validValues>
                                            <value>0</value>
                                            <value>9</value>
                                            <value>10</value>
                                            <value>12</value>
                                            <value>13</value>
                                            <value>32</value> 
                                        </validValues>
                                    </symbol>
                                </item>  
                                
                                <processing type="pullXCEL" xcelRef="TEMPL_indirectObjectReference"/>
                                
                                <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                    <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                        <range>
                                            <startposition xsi:type="sequential"/>
                                            <length xsi:type="fixed">1</length>
                                        </range>
                                        <validValues>
                                            <value>0</value>
                                            <value>9</value>
                                            <value>10</value>
                                            <value>12</value>
                                            <value>13</value>
                                            <value>32</value> 
                                        </validValues>
                                    </symbol>
                                </item>  
                            </item>
                            
                            <!-- KEYWORD: ID:  -->
                             <item  identifier="trailerDictionaryEntries_ID" xsi:type="structuringItem" order="sequence" optional="true">
                                 <property identifier="KEY_nameObj_ID" interpretation="ASCII">
                                     <range>
                                         <startposition xsi:type="sequential"/>
                                         <length xsi:type="fixed">3</length>
                                     </range>
                                     <value>/ID</value>   
                                 </property>
                                 
                                 <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                 <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                     <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <validValues>
                                             <value>0</value>
                                             <value>9</value>
                                             <value>10</value>
                                             <value>12</value>
                                             <value>13</value>
                                             <value>32</value> 
                                         </validValues>
                                     </symbol>
                                 </item>                                
                                 
                                 <item identifier="VALUE_arrayObj_ID" xsi:type="structuringItem" order="sequence">
                                     <item identifier="TEMPL_arrayObjStartDelimiter" xsi:type="structuringItem" order="all">
                                         <property identifier="arrayObjStartDelimiter" interpretation="uint8">
                                             <range>
                                                 <startposition xsi:type="sequential"/>
                                                 <length xsi:type="fixed">1</length>
                                             </range>
                                             <value>91</value>   <!-- = [  -->
                                         </property>
                                     </item>
                                     
                                     <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                     <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                         <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                             <range>
                                                 <startposition xsi:type="sequential"/>
                                                 <length xsi:type="fixed">1</length>
                                             </range>
                                             <validValues>
                                                 <value>0</value>
                                                 <value>9</value>
                                                 <value>10</value>
                                                 <value>12</value>
                                                 <value>13</value>
                                                 <value>32</value> 
                                             </validValues>
                                         </symbol>
                                     </item>  
                                     
                                     <item identifier="ID_Identifier" xsi:type="structuringItem" order="sequence" optional="true">
                                         <item identifier="ID_identifier_Part" xsi:type="structuringItem" multiple="true">
                                             <processing type="pullXCEL" xcelRef="TEMPL_hexString">
                                               <processingMethod name="setName">
                                                     <param value="PDFFileIDPart"></param>
                                                 </processingMethod> 
                                             </processing>   
                                         </item>                             
                                     </item>
                                     
                                     <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                     <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                         <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                             <range>
                                                 <startposition xsi:type="sequential"/>
                                                 <length xsi:type="fixed">1</length>
                                             </range>
                                             <validValues>
                                                 <value>0</value>
                                                 <value>9</value>
                                                 <value>10</value>
                                                 <value>12</value>
                                                 <value>13</value>
                                                 <value>32</value> 
                                             </validValues>
                                         </symbol>
                                     </item>  
                                     
                                     <processing type="pullXCEL" xcelRef="TEMPL_arrayObjEndDelimiter"/>                                                        
                                 </item>
                                 
                                 <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                                 <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                     <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                         <range>
                                             <startposition xsi:type="sequential"/>
                                             <length xsi:type="fixed">1</length>
                                         </range>
                                         <validValues>
                                             <value>0</value>
                                             <value>9</value>
                                             <value>10</value>
                                             <value>12</value>
                                             <value>13</value>
                                             <value>32</value> 
                                         </validValues>
                                     </symbol>
                                 </item>  
                             </item>  
                                                  
                            
                             <!-- TODO:     more KEYWORDS to follow    -->
                             <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                             <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                                 <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                                     <range>
                                         <startposition xsi:type="sequential"/>
                                         <length xsi:type="fixed">1</length>
                                     </range>
                                     <validValues>
                                         <value>0</value>
                                         <value>9</value>
                                         <value>10</value>
                                         <value>12</value>
                                         <value>13</value>
                                         <value>32</value> 
                                     </validValues>
                                 </symbol>
                             </item>                           
                         </item>
                         <processing type="pullXCEL" xcelRef="TEMPL_dictObjEndDelimiter"/>
                     </item>
                     
                     <!--  <processing type="pullXCEL" xcelRef="TEMPL_noise"/>  -->
                     <item identifier="ws_03" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
                         <symbol identifier="ws03" interpretation="uint8" multiple="true" optional="true">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues>
                                 <value>0</value>
                                 <value>9</value>
                                 <value>10</value>
                                 <value>12</value>
                                 <value>13</value>
                                 <value>32</value> 
                             </validValues>
                         </symbol>
                     </item>  
                     
                 </item>          
                  <!--  +++++++++++   xref   reference :    +++++++++++++++
                  -->                
                 <item identifier="xref_reference" xsi:type="structuringItem" order="sequence">             
                     <property identifier="xref_reference_keyword_startxref" interpretation="ASCII" originalName="xref_reference_keyword_startxref">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">9</length>
                             </range>
                             <value>startxref</value>   
                     </property>
                     <processing type="pullXCEL" xcelRef="TEMPL_noise"/>                
                     <item identifier="xrefstart_byteOffset" xsi:type="definitionItem" order="sequence">
                         
                         <symbol xsi:type="symbolType" identifier="PDFXrefOffset" multiple="true" originalName="PDFXrefOffset">
                             <range>
                                 <startposition xsi:type="sequential"/>
                                 <length xsi:type="fixed">1</length>
                             </range>
                             <validValues>
                                 <startRange>48</startRange>
                                 <endRange>57</endRange>
                             </validValues>
                         </symbol>     
                         
                         <!--<processing type="pullXCEL" xcelRef="TEMPL_intObj">
                             <processingMethod name="setName" >
                                 <param value="PDFXrefOffset"></param>
                             </processingMethod>
                         </processing>-->
                         <name>PDFXrefOffset</name>
                     </item>
                     <processing type="pullXCEL" xcelRef="TEMPL_whitespaceAll"/>                       
                     <property identifier="EOFMarker" originalName="endOfFileMarker" interpretation="ASCII">
                         <range>
                             <startposition xsi:type="sequential"/>
                             <length xsi:type="fixed">5</length>
                         </range>
                         <value>%%EOF</value> 
                  </property>
                     <processing type="pullXCEL" xcelRef="TEMPL_noise"/>
                 </item>    
           
            </item>   <!-- End: trailer    -->
                
                
        </item>  <!-- end root item -->
        
    </formatDescription>
    
<!-- 
#################################

TEMPLATES:

################################
-->
    <templates>
        
        <!-- Name object delimiter '/':    -->       
        <item identifier="TEMPL_nameObjDelimiter" xsi:type="structuringItem" order="sequence">
            <property identifier="nameObjDelimiter" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>47</value>   <!-- =  /   -->
            </property>              
        </item>       
        
        
        <!-- Dictionary Object Start Delimiter '<<'  :     -->      
        <item identifier="TEMPL_dictObjStartDelimiter" xsi:type="structuringItem" order="sequence">
            <property identifier="dictObjStartDelimiter" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">2</length>
                </range>
                <value>60 60</value>   <!-- =   << -->
            </property>
        </item>
        
        <!-- Dictionary ObjectEnd Delimiter '>>'  :     -->
        <item identifier="TEMPL_dictObjEndDelimiter" xsi:type="structuringItem" order="sequence">
            <property identifier="dictObjEndDelimiter" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">2</length>
                </range>
                <value>62 62</value>   <!-- = >>  -->
            </property>
        </item>     
        
        <!-- Array Object Start Delimiter '['  :     -->
        <item identifier="TEMPL_arrayObjStartDelimiter" xsi:type="structuringItem" order="sequence">
            <property identifier="arrayObjStartDelimiter" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>91</value>   <!-- = [  -->
            </property>
        </item>
        
        <!-- Array Object End Delimiter ' ]'  :     -->
        <item identifier="TEMPL_arrayObjEndDelimiter" xsi:type="structuringItem" order="sequence">
            <property identifier="arrayObjEndDelimiter" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>93</value>   <!-- = ]  -->
            </property>
        </item>
        
        <!-- Stream Object Start Delimiter   'stream' :     -->
        <item identifier="TEMPL_streamObjStartDelimiter" xsi:type="structuringItem" order="sequence" optional="true" multiple="true">
            <property identifier="streamObjStartDelimiter" interpretation="ASCII" optional="true">
                <range>                                  
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">6</length>
                </range>
                <value>stream</value> 
            </property>    
        </item>    
        
        <!-- Stream Object End Delimiter   'endstream' :     -->
        <item identifier="TEMPL_streamObjEndDelimiter" xsi:type="structuringItem" order="sequence" multiple="true">
            <property identifier="streamObjEndDelimiter" interpretation="ASCII">
                <range>                                  
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">9</length>
                </range>
                <value>endstream</value> 
            </property>    
        </item>    
        
        <!-- WhitespaceSansEOL (without EOL markers):  -->
        <item identifier="TEMPL_whitespaceSansEOL" xsi:type="structuringItem" order="sequence">
            <symbol identifier="whitespaceSansEOL" interpretation="uint8" multiple="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <validValues>
                    <value>0</value>
                    <value>9</value>
                    <value>12</value>
                    <value>32</value> 
                </validValues>
            </symbol>
        </item>   
        
        
        <!-- noise (= whitespaceAll and comment lines):    -->     
        <item identifier="TEMPL_noise"  xsi:type="structuringItem" order="all" optional="true" multiple="false">
            <item identifier="ws_noise" xsi:type="structuringItem" optional="true" multiple="true">
                <processing type="pullXCEL" xcelRef="TEMPL_whitespaceAll"/>                     
            </item>    
            <item identifier="comment_noise" xsi:type="structuringItem" optional="true" multiple="true">
                <processing type="pullXCEL" xcelRef="TEMPL_comment"/>                     
            </item>  
        </item> 
        
        
        
        <!-- Whitespace All (all of the whitespace chars):  -->
        <item identifier="TEMPL_whitespaceAll" xsi:type="structuringItem" order="sequence" optional="true">
            <symbol identifier="whitespaceAll" interpretation="uint8" multiple="true" optional="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <validValues>
                    <value>0</value>
                    <value>9</value>
                    <value>10</value>
                    <value>12</value>
                    <value>13</value>
                    <value>32</value> 
                </validValues>
            </symbol>
        </item>   
        
        
        <!-- EOL Markers:  -->
        <item identifier="TEMPL_EOLMarker" xsi:type="structuringItem" order="sequence">
            <symbol identifier="EOL_marker" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <validValues>
                    <value>13</value>
                    <value>10</value>
                </validValues>
            </symbol>
        </item>         
        
        <!--  Comment lines:  -->
        <item identifier="TEMPL_comment" xsi:type="structuringItem" order="sequence" optional="true">           
            <property  identifier="comment_delimiter" interpretation="uint8">
                    <range>
                        <startposition xsi:type="sequential"/>
                        <length xsi:type="fixed">1</length>
                    </range>
                   <value>37</value>   <!--     =%     -->
            </property>
            <symbol identifier="comment_char" interpretation="uint8" multiple="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <nonValidValues>
                    <value>13</value>
                    <value>10</value>
                </nonValidValues>
            </symbol>
            <processing type="pullXCEL" xcelRef="TEMPL_EOLMarker"/>
        </item>     
        
       
        <!-- default name object (all chars allowed except whitespaces):    -->     
        <item identifier="TEMPL_defaultNameObject" xsi:type="definitionItem" order="sequence">
            <symbol identifier="defaultNameObj" interpretation="uint8" multiple="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <nonValidValues>
                    <value>0</value>
                    <value>9</value>
                    <value>10</value>
                    <value>12</value>
                    <value>13</value>
                    <value>32</value> 
                </nonValidValues>
            </symbol>
            <name>NAME_defaultNameObj</name>
        </item>   
               
        <!-- default integer number object :    -->     
        <item identifier="TEMPL_intObj" xsi:type="definitionItem" order="sequence">
            <property identifier="intObj_hyphenMinus" interpretation="uint8" optional="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>45</value>
            </property>
            <symbol identifier="intNb" interpretation="uint8" multiple="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <validValues>
                    <startRange>48</startRange>
                    <endRange>57</endRange>
                </validValues>
            </symbol>
            <name>NAME_intObj</name>
        </item>
        
          <!-- default real number object:    -->
        <item identifier="TEMPL_realNb"  xsi:type="definitionItem" order="sequence">
            <property identifier="realNb_hyphenMinus" optional="true" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>45</value>   <!--  =   -     -->
            </property>            
            <processing type="pullXCEL" xcelRef="TEMPL_intObj"/>                                                       
            <property identifier="realNbDelimiter"  interpretation="uint8" optional="true">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>46</value>
            </property> 
            <item xsi:type="structuringItem" identifier="realNbExpansion"  optional="true">
                <processing type="pullXCEL" xcelRef="TEMPL_intObj"/>
            </item>
            <name>NAME_realNb</name>
        </item>
        
        <!-- indirect object reference :    -->
        <item  identifier="TEMPL_indirectObjectReference"  xsi:type="structuringItem">
            <item identifier="indirectObjRef" xsi:type="definitionItem" order="sequence">
                <item identifier="objectNumber" originalName="objectNumber" xsi:type="definitionItem">
                    <symbol identifier="objectNumberPart"  interpretation="uint8" multiple="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues> 
                            <startRange>48</startRange>     <!-- =0  -->
                            <endRange>57</endRange>
                        </validValues>
                    </symbol>
                    <name>PDFObjectNumber</name>
                </item>
                <item identifier="indirectObj_objectPart_delimiter01" xsi:type="structuringItem">
                    <processing type="pullXCEL" xcelRef="TEMPL_whitespaceSansEOL"/>                     
                </item> 
                <item identifier="generationNumber" originalName="generationNumber" xsi:type="definitionItem">
                    <symbol identifier="generationNumberPart"  interpretation="uint8" multiple="true">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <validValues> 
                            <startRange>48</startRange>  <!-- =0  -->
                            <endRange>57</endRange>
                        </validValues>
                    </symbol>
                    <name>PDFObjectGenerationNumber</name>
                </item>
                <item identifier="indirectObj_objectPart_delimiter02" xsi:type="structuringItem">
                    <processing type="pullXCEL" xcelRef="TEMPL_whitespaceSansEOL"/>                     
                </item> 
                <item identifier="reference_keyword" xsi:type="structuringItem">
                    <property identifier="keyword_R"  originalName="R" interpretation="ASCII">
                        <range>
                            <startposition xsi:type="sequential"/>
                            <length xsi:type="fixed">1</length>
                        </range>
                        <value>R</value> 
                    </property>
                </item>
                <name>indirectObjectReference</name>    
            </item>        
        </item>
        
        <!-- literal string:   ACHTUNG:   
            Processing für test auf balanced parenthesis und maskierte runde Klammern 
            und backslash einfügen;
            siehe PDF 1.4, S.29 f.
        -->
        
        <item  identifier="TEMPL_litString"  xsi:type="structuringItem" order="sequence">
            <property identifier="litStringOpeningParenthesis" interpretation="ASCII">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>(</value>
            </property>
            <item identifier="litStringContent"  xsi:type="definitionItem"  optional="true" order="sequence">
                <symbol identifier="litString_char" interpretation="ASCII" multiple="true">
                    <range>
                        <startposition xsi:type="sequential"/>
                        <length xsi:type="fixed">1</length>
                    </range>
                    <nonValidValues>
                        <value>)</value>                      
                    </nonValidValues>
                </symbol>
                <name>NAME_litstring</name>
            </item>    
            <property identifier="litStringClosingParenthesis" interpretation="ASCII">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>)</value>
            </property>
        </item>
        
        <!-- hex string:   -->
       <!-- Hexadecimal Strings
              Reference: p. 32f.
        Strings may also be written in hexadecimal form; this is useful for including arbitrary
        binary data in a PDF file. A hexadecimal string is written as a sequence of
        hexadecimal digits (0–9 and either A–F or a–f) enclosed within angle brackets
        (< and >):        
        <4E6F762073686D6F7A206B6120706F702E>        
            Each pair of hexadecimal digits defines one byte of the string.
            
            [!!     HKI comment:  following is not yet implemented:     !!]            
            
            White-space characters
            (such as space, tab, carriage return, line feed, and form feed) are ignored.
            If the final digit of a hexadecimal string is missing—that is, if there is an odd
            number of digits—the final digit is assumed to be 0. For example,
            <901FA3>
            is a 3-byte string consisting of the characters whose hexadecimal codes are 90, 1F,
           and A3, but
            <901FA>
            is a 3-byte string containing the characters whose hexadecimal codes are 90, 1F,
           and A0.
       -->         
        
        <item  identifier="TEMPL_hexString"  xsi:type="structuringItem" order="sequence">
            <property identifier="hexStringOpeningAngle" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>60</value>    
            </property>
            <item identifier="hexStringContent"  xsi:type="definitionItem"  optional="true" order="sequence">
                <property identifier="hexString_hexNumber" matchingBehaviour="regexp" interpretation="ASCII" multiple="true">
                    <range>
                        <startposition xsi:type="sequential"/>
                        <length xsi:type="fixed">2</length>
                    </range>
                    <value>[0-9a-fA-F]{2}</value>       <!--    auch möglich:  \xn   ??  -->
                </property>
                <name>NAME_hexString</name>  
            </item>    
            <property identifier="hexStringClosingAngle" interpretation="uint8">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>62</value>  
            </property>
        </item>   
        
        <!--date string:  .-->
        <item  identifier="TEMPL_dateString"  xsi:type="structuringItem" order="sequence">
            <property identifier="dateStringOpeningParenthesis" interpretation="ASCII">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>(</value>
            </property>
            <item identifier="dateStringContent"  xsi:type="definitionItem"  optional="true" order="sequence">
                <property identifier="dateString" matchingBehaviour="regexp" interpretation="ASCII">
                    <range>
                        <startposition xsi:type="sequential"/>
                        <length xsi:type="fixed">23</length>
                    </range>
                    <value>D:[0-9]+[Z-+][0-9]+'[0-9]+'</value>    <!-- soll sein:  D:NNNNNNNNNNNNNNNNONN'NN', wobei O= +,- oder Z  -->
                </property>
                <name>NAME_litstring</name>
            </item>    
            <property identifier="IDlitStringClosingParenthesis" interpretation="ASCII">
                <range>
                    <startposition xsi:type="sequential"/>
                    <length xsi:type="fixed">1</length>
                </range>
                <value>)</value>
            </property>
        </item>
          
        
   </templates> 
    <!-- 
        #################################
        
        POST PROCESSING:
        
        ################################
    -->
    <postProcessing>       
    </postProcessing>

</XCELDocument>
